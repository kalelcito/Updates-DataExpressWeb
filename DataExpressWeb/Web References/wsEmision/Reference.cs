//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DataExpressWeb.wsEmision {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WsEmisionSoap", Namespace="http://tempuri.org/")]
    public partial class WsEmision : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ObtenerMensajeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObtenerMensajeTecnicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObtenerMensajeXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelarComprobanteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ComprobantePaqueteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecibeInfoTxtOperationCompleted;
        
        private System.Threading.SendOrPostCallback WakeUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecibeInfoPagosOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecibeInfoXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerarPdfCancelacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback PreviewPdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerarPdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerarPdfPagosOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimbrarOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsEmision() {
            this.Url = global::DataExpressWeb.Properties.Settings.Default.DataExpressWeb_wsEmision_WsEmision;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ObtenerMensajeCompletedEventHandler ObtenerMensajeCompleted;
        
        /// <remarks/>
        public event ObtenerMensajeTecnicoCompletedEventHandler ObtenerMensajeTecnicoCompleted;
        
        /// <remarks/>
        public event ObtenerMensajeXmlCompletedEventHandler ObtenerMensajeXmlCompleted;
        
        /// <remarks/>
        public event CancelarComprobanteCompletedEventHandler CancelarComprobanteCompleted;
        
        /// <remarks/>
        public event ComprobantePaqueteCompletedEventHandler ComprobantePaqueteCompleted;
        
        /// <remarks/>
        public event RecibeInfoTxtCompletedEventHandler RecibeInfoTxtCompleted;
        
        /// <remarks/>
        public event WakeUpCompletedEventHandler WakeUpCompleted;
        
        /// <remarks/>
        public event RecibeInfoPagosCompletedEventHandler RecibeInfoPagosCompleted;
        
        /// <remarks/>
        public event RecibeInfoXmlCompletedEventHandler RecibeInfoXmlCompleted;
        
        /// <remarks/>
        public event GenerarPdfCancelacionCompletedEventHandler GenerarPdfCancelacionCompleted;
        
        /// <remarks/>
        public event PreviewPdfCompletedEventHandler PreviewPdfCompleted;
        
        /// <remarks/>
        public event obtenerPDFCompletedEventHandler obtenerPDFCompleted;
        
        /// <remarks/>
        public event obtenerXMLCompletedEventHandler obtenerXMLCompleted;
        
        /// <remarks/>
        public event GenerarPdfCompletedEventHandler GenerarPdfCompleted;
        
        /// <remarks/>
        public event GenerarPdfPagosCompletedEventHandler GenerarPdfPagosCompleted;
        
        /// <remarks/>
        public event TimbrarCompletedEventHandler TimbrarCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerMensaje", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ObtenerMensaje() {
            object[] results = this.Invoke("ObtenerMensaje", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ObtenerMensajeAsync() {
            this.ObtenerMensajeAsync(null);
        }
        
        /// <remarks/>
        public void ObtenerMensajeAsync(object userState) {
            if ((this.ObtenerMensajeOperationCompleted == null)) {
                this.ObtenerMensajeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerMensajeOperationCompleted);
            }
            this.InvokeAsync("ObtenerMensaje", new object[0], this.ObtenerMensajeOperationCompleted, userState);
        }
        
        private void OnObtenerMensajeOperationCompleted(object arg) {
            if ((this.ObtenerMensajeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerMensajeCompleted(this, new ObtenerMensajeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerMensajeTecnico", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ObtenerMensajeTecnico() {
            object[] results = this.Invoke("ObtenerMensajeTecnico", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ObtenerMensajeTecnicoAsync() {
            this.ObtenerMensajeTecnicoAsync(null);
        }
        
        /// <remarks/>
        public void ObtenerMensajeTecnicoAsync(object userState) {
            if ((this.ObtenerMensajeTecnicoOperationCompleted == null)) {
                this.ObtenerMensajeTecnicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerMensajeTecnicoOperationCompleted);
            }
            this.InvokeAsync("ObtenerMensajeTecnico", new object[0], this.ObtenerMensajeTecnicoOperationCompleted, userState);
        }
        
        private void OnObtenerMensajeTecnicoOperationCompleted(object arg) {
            if ((this.ObtenerMensajeTecnicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerMensajeTecnicoCompleted(this, new ObtenerMensajeTecnicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerMensajeXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ObtenerMensajeXml() {
            object[] results = this.Invoke("ObtenerMensajeXml", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ObtenerMensajeXmlAsync() {
            this.ObtenerMensajeXmlAsync(null);
        }
        
        /// <remarks/>
        public void ObtenerMensajeXmlAsync(object userState) {
            if ((this.ObtenerMensajeXmlOperationCompleted == null)) {
                this.ObtenerMensajeXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerMensajeXmlOperationCompleted);
            }
            this.InvokeAsync("ObtenerMensajeXml", new object[0], this.ObtenerMensajeXmlOperationCompleted, userState);
        }
        
        private void OnObtenerMensajeXmlOperationCompleted(object arg) {
            if ((this.ObtenerMensajeXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerMensajeXmlCompleted(this, new ObtenerMensajeXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelarComprobante", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelarComprobante(string idComprobante, string idEmpleado, string emisorDb, bool ambiente) {
            object[] results = this.Invoke("CancelarComprobante", new object[] {
                        idComprobante,
                        idEmpleado,
                        emisorDb,
                        ambiente});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelarComprobanteAsync(string idComprobante, string idEmpleado, string emisorDb, bool ambiente) {
            this.CancelarComprobanteAsync(idComprobante, idEmpleado, emisorDb, ambiente, null);
        }
        
        /// <remarks/>
        public void CancelarComprobanteAsync(string idComprobante, string idEmpleado, string emisorDb, bool ambiente, object userState) {
            if ((this.CancelarComprobanteOperationCompleted == null)) {
                this.CancelarComprobanteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelarComprobanteOperationCompleted);
            }
            this.InvokeAsync("CancelarComprobante", new object[] {
                        idComprobante,
                        idEmpleado,
                        emisorDb,
                        ambiente}, this.CancelarComprobanteOperationCompleted, userState);
        }
        
        private void OnCancelarComprobanteOperationCompleted(object arg) {
            if ((this.CancelarComprobanteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelarComprobanteCompleted(this, new CancelarComprobanteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ComprobantePaquete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ComprobantePaquete(string idComprobante, string txtInvoice, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual) {
            object[] results = this.Invoke("ComprobantePaquete", new object[] {
                        idComprobante,
                        txtInvoice,
                        idEmpleado,
                        emisorDb,
                        ambiente,
                        codDoc,
                        guardarEnDisco,
                        manual});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ComprobantePaqueteAsync(string idComprobante, string txtInvoice, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual) {
            this.ComprobantePaqueteAsync(idComprobante, txtInvoice, idEmpleado, emisorDb, ambiente, codDoc, guardarEnDisco, manual, null);
        }
        
        /// <remarks/>
        public void ComprobantePaqueteAsync(string idComprobante, string txtInvoice, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual, object userState) {
            if ((this.ComprobantePaqueteOperationCompleted == null)) {
                this.ComprobantePaqueteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnComprobantePaqueteOperationCompleted);
            }
            this.InvokeAsync("ComprobantePaquete", new object[] {
                        idComprobante,
                        txtInvoice,
                        idEmpleado,
                        emisorDb,
                        ambiente,
                        codDoc,
                        guardarEnDisco,
                        manual}, this.ComprobantePaqueteOperationCompleted, userState);
        }
        
        private void OnComprobantePaqueteOperationCompleted(object arg) {
            if ((this.ComprobantePaqueteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ComprobantePaqueteCompleted(this, new ComprobantePaqueteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecibeInfoTxt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RecibeInfoTxt(string txtInvoice, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual, string conector, string folioModificado) {
            object[] results = this.Invoke("RecibeInfoTxt", new object[] {
                        txtInvoice,
                        idEmpleado,
                        emisorDb,
                        ambiente,
                        codDoc,
                        guardarEnDisco,
                        manual,
                        conector,
                        folioModificado});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RecibeInfoTxtAsync(string txtInvoice, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual, string conector, string folioModificado) {
            this.RecibeInfoTxtAsync(txtInvoice, idEmpleado, emisorDb, ambiente, codDoc, guardarEnDisco, manual, conector, folioModificado, null);
        }
        
        /// <remarks/>
        public void RecibeInfoTxtAsync(string txtInvoice, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual, string conector, string folioModificado, object userState) {
            if ((this.RecibeInfoTxtOperationCompleted == null)) {
                this.RecibeInfoTxtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecibeInfoTxtOperationCompleted);
            }
            this.InvokeAsync("RecibeInfoTxt", new object[] {
                        txtInvoice,
                        idEmpleado,
                        emisorDb,
                        ambiente,
                        codDoc,
                        guardarEnDisco,
                        manual,
                        conector,
                        folioModificado}, this.RecibeInfoTxtOperationCompleted, userState);
        }
        
        private void OnRecibeInfoTxtOperationCompleted(object arg) {
            if ((this.RecibeInfoTxtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecibeInfoTxtCompleted(this, new RecibeInfoTxtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WakeUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WakeUp() {
            object[] results = this.Invoke("WakeUp", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WakeUpAsync() {
            this.WakeUpAsync(null);
        }
        
        /// <remarks/>
        public void WakeUpAsync(object userState) {
            if ((this.WakeUpOperationCompleted == null)) {
                this.WakeUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWakeUpOperationCompleted);
            }
            this.InvokeAsync("WakeUp", new object[0], this.WakeUpOperationCompleted, userState);
        }
        
        private void OnWakeUpOperationCompleted(object arg) {
            if ((this.WakeUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WakeUpCompleted(this, new WakeUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecibeInfoPagos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RecibeInfoPagos(string jsonPagos, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual) {
            object[] results = this.Invoke("RecibeInfoPagos", new object[] {
                        jsonPagos,
                        idEmpleado,
                        emisorDb,
                        ambiente,
                        codDoc,
                        guardarEnDisco,
                        manual});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RecibeInfoPagosAsync(string jsonPagos, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual) {
            this.RecibeInfoPagosAsync(jsonPagos, idEmpleado, emisorDb, ambiente, codDoc, guardarEnDisco, manual, null);
        }
        
        /// <remarks/>
        public void RecibeInfoPagosAsync(string jsonPagos, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual, object userState) {
            if ((this.RecibeInfoPagosOperationCompleted == null)) {
                this.RecibeInfoPagosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecibeInfoPagosOperationCompleted);
            }
            this.InvokeAsync("RecibeInfoPagos", new object[] {
                        jsonPagos,
                        idEmpleado,
                        emisorDb,
                        ambiente,
                        codDoc,
                        guardarEnDisco,
                        manual}, this.RecibeInfoPagosOperationCompleted, userState);
        }
        
        private void OnRecibeInfoPagosOperationCompleted(object arg) {
            if ((this.RecibeInfoPagosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecibeInfoPagosCompleted(this, new RecibeInfoPagosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecibeInfoXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RecibeInfoXml(string xmlInvoice, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual) {
            object[] results = this.Invoke("RecibeInfoXml", new object[] {
                        xmlInvoice,
                        idEmpleado,
                        emisorDb,
                        ambiente,
                        codDoc,
                        guardarEnDisco,
                        manual});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RecibeInfoXmlAsync(string xmlInvoice, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual) {
            this.RecibeInfoXmlAsync(xmlInvoice, idEmpleado, emisorDb, ambiente, codDoc, guardarEnDisco, manual, null);
        }
        
        /// <remarks/>
        public void RecibeInfoXmlAsync(string xmlInvoice, string idEmpleado, string emisorDb, bool ambiente, string codDoc, bool guardarEnDisco, bool manual, object userState) {
            if ((this.RecibeInfoXmlOperationCompleted == null)) {
                this.RecibeInfoXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecibeInfoXmlOperationCompleted);
            }
            this.InvokeAsync("RecibeInfoXml", new object[] {
                        xmlInvoice,
                        idEmpleado,
                        emisorDb,
                        ambiente,
                        codDoc,
                        guardarEnDisco,
                        manual}, this.RecibeInfoXmlOperationCompleted, userState);
        }
        
        private void OnRecibeInfoXmlOperationCompleted(object arg) {
            if ((this.RecibeInfoXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecibeInfoXmlCompleted(this, new RecibeInfoXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerarPdfCancelacion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GenerarPdfCancelacion(string emisorDb, string idComprobante) {
            object[] results = this.Invoke("GenerarPdfCancelacion", new object[] {
                        emisorDb,
                        idComprobante});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GenerarPdfCancelacionAsync(string emisorDb, string idComprobante) {
            this.GenerarPdfCancelacionAsync(emisorDb, idComprobante, null);
        }
        
        /// <remarks/>
        public void GenerarPdfCancelacionAsync(string emisorDb, string idComprobante, object userState) {
            if ((this.GenerarPdfCancelacionOperationCompleted == null)) {
                this.GenerarPdfCancelacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarPdfCancelacionOperationCompleted);
            }
            this.InvokeAsync("GenerarPdfCancelacion", new object[] {
                        emisorDb,
                        idComprobante}, this.GenerarPdfCancelacionOperationCompleted, userState);
        }
        
        private void OnGenerarPdfCancelacionOperationCompleted(object arg) {
            if ((this.GenerarPdfCancelacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarPdfCancelacionCompleted(this, new GenerarPdfCancelacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PreviewPdf", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] PreviewPdf(string emisorDb, string txtInvoice, string codDoc) {
            object[] results = this.Invoke("PreviewPdf", new object[] {
                        emisorDb,
                        txtInvoice,
                        codDoc});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void PreviewPdfAsync(string emisorDb, string txtInvoice, string codDoc) {
            this.PreviewPdfAsync(emisorDb, txtInvoice, codDoc, null);
        }
        
        /// <remarks/>
        public void PreviewPdfAsync(string emisorDb, string txtInvoice, string codDoc, object userState) {
            if ((this.PreviewPdfOperationCompleted == null)) {
                this.PreviewPdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPreviewPdfOperationCompleted);
            }
            this.InvokeAsync("PreviewPdf", new object[] {
                        emisorDb,
                        txtInvoice,
                        codDoc}, this.PreviewPdfOperationCompleted, userState);
        }
        
        private void OnPreviewPdfOperationCompleted(object arg) {
            if ((this.PreviewPdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PreviewPdfCompleted(this, new PreviewPdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/obtenerPDF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] obtenerPDF(string uuid, string rfcEmisor) {
            object[] results = this.Invoke("obtenerPDF", new object[] {
                        uuid,
                        rfcEmisor});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void obtenerPDFAsync(string uuid, string rfcEmisor) {
            this.obtenerPDFAsync(uuid, rfcEmisor, null);
        }
        
        /// <remarks/>
        public void obtenerPDFAsync(string uuid, string rfcEmisor, object userState) {
            if ((this.obtenerPDFOperationCompleted == null)) {
                this.obtenerPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerPDFOperationCompleted);
            }
            this.InvokeAsync("obtenerPDF", new object[] {
                        uuid,
                        rfcEmisor}, this.obtenerPDFOperationCompleted, userState);
        }
        
        private void OnobtenerPDFOperationCompleted(object arg) {
            if ((this.obtenerPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerPDFCompleted(this, new obtenerPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/obtenerXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] obtenerXML(string uuid, string rfcEmisor) {
            object[] results = this.Invoke("obtenerXML", new object[] {
                        uuid,
                        rfcEmisor});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void obtenerXMLAsync(string uuid, string rfcEmisor) {
            this.obtenerXMLAsync(uuid, rfcEmisor, null);
        }
        
        /// <remarks/>
        public void obtenerXMLAsync(string uuid, string rfcEmisor, object userState) {
            if ((this.obtenerXMLOperationCompleted == null)) {
                this.obtenerXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerXMLOperationCompleted);
            }
            this.InvokeAsync("obtenerXML", new object[] {
                        uuid,
                        rfcEmisor}, this.obtenerXMLOperationCompleted, userState);
        }
        
        private void OnobtenerXMLOperationCompleted(object arg) {
            if ((this.obtenerXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerXMLCompleted(this, new obtenerXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerarPdf", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GenerarPdf(string emisorDb, string idComprobante, string codDoc) {
            object[] results = this.Invoke("GenerarPdf", new object[] {
                        emisorDb,
                        idComprobante,
                        codDoc});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GenerarPdfAsync(string emisorDb, string idComprobante, string codDoc) {
            this.GenerarPdfAsync(emisorDb, idComprobante, codDoc, null);
        }
        
        /// <remarks/>
        public void GenerarPdfAsync(string emisorDb, string idComprobante, string codDoc, object userState) {
            if ((this.GenerarPdfOperationCompleted == null)) {
                this.GenerarPdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarPdfOperationCompleted);
            }
            this.InvokeAsync("GenerarPdf", new object[] {
                        emisorDb,
                        idComprobante,
                        codDoc}, this.GenerarPdfOperationCompleted, userState);
        }
        
        private void OnGenerarPdfOperationCompleted(object arg) {
            if ((this.GenerarPdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarPdfCompleted(this, new GenerarPdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerarPdfPagos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GenerarPdfPagos(string emisorDb, string idPago, string idComprobante) {
            object[] results = this.Invoke("GenerarPdfPagos", new object[] {
                        emisorDb,
                        idPago,
                        idComprobante});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GenerarPdfPagosAsync(string emisorDb, string idPago, string idComprobante) {
            this.GenerarPdfPagosAsync(emisorDb, idPago, idComprobante, null);
        }
        
        /// <remarks/>
        public void GenerarPdfPagosAsync(string emisorDb, string idPago, string idComprobante, object userState) {
            if ((this.GenerarPdfPagosOperationCompleted == null)) {
                this.GenerarPdfPagosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarPdfPagosOperationCompleted);
            }
            this.InvokeAsync("GenerarPdfPagos", new object[] {
                        emisorDb,
                        idPago,
                        idComprobante}, this.GenerarPdfPagosOperationCompleted, userState);
        }
        
        private void OnGenerarPdfPagosOperationCompleted(object arg) {
            if ((this.GenerarPdfPagosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarPdfPagosCompleted(this, new GenerarPdfPagosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Timbrar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Timbrar(string xmlInvoice, bool ambiente, string codDoc, string numCert, string certBase64, string keyBase64, string claveKey) {
            object[] results = this.Invoke("Timbrar", new object[] {
                        xmlInvoice,
                        ambiente,
                        codDoc,
                        numCert,
                        certBase64,
                        keyBase64,
                        claveKey});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TimbrarAsync(string xmlInvoice, bool ambiente, string codDoc, string numCert, string certBase64, string keyBase64, string claveKey) {
            this.TimbrarAsync(xmlInvoice, ambiente, codDoc, numCert, certBase64, keyBase64, claveKey, null);
        }
        
        /// <remarks/>
        public void TimbrarAsync(string xmlInvoice, bool ambiente, string codDoc, string numCert, string certBase64, string keyBase64, string claveKey, object userState) {
            if ((this.TimbrarOperationCompleted == null)) {
                this.TimbrarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimbrarOperationCompleted);
            }
            this.InvokeAsync("Timbrar", new object[] {
                        xmlInvoice,
                        ambiente,
                        codDoc,
                        numCert,
                        certBase64,
                        keyBase64,
                        claveKey}, this.TimbrarOperationCompleted, userState);
        }
        
        private void OnTimbrarOperationCompleted(object arg) {
            if ((this.TimbrarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimbrarCompleted(this, new TimbrarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ObtenerMensajeCompletedEventHandler(object sender, ObtenerMensajeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerMensajeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtenerMensajeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ObtenerMensajeTecnicoCompletedEventHandler(object sender, ObtenerMensajeTecnicoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerMensajeTecnicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtenerMensajeTecnicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ObtenerMensajeXmlCompletedEventHandler(object sender, ObtenerMensajeXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerMensajeXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtenerMensajeXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelarComprobanteCompletedEventHandler(object sender, CancelarComprobanteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelarComprobanteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelarComprobanteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ComprobantePaqueteCompletedEventHandler(object sender, ComprobantePaqueteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ComprobantePaqueteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ComprobantePaqueteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RecibeInfoTxtCompletedEventHandler(object sender, RecibeInfoTxtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecibeInfoTxtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecibeInfoTxtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void WakeUpCompletedEventHandler(object sender, WakeUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WakeUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WakeUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RecibeInfoPagosCompletedEventHandler(object sender, RecibeInfoPagosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecibeInfoPagosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecibeInfoPagosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RecibeInfoXmlCompletedEventHandler(object sender, RecibeInfoXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecibeInfoXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecibeInfoXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GenerarPdfCancelacionCompletedEventHandler(object sender, GenerarPdfCancelacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerarPdfCancelacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerarPdfCancelacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void PreviewPdfCompletedEventHandler(object sender, PreviewPdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PreviewPdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PreviewPdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void obtenerPDFCompletedEventHandler(object sender, obtenerPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void obtenerXMLCompletedEventHandler(object sender, obtenerXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GenerarPdfCompletedEventHandler(object sender, GenerarPdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerarPdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerarPdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GenerarPdfPagosCompletedEventHandler(object sender, GenerarPdfPagosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerarPdfPagosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerarPdfPagosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void TimbrarCompletedEventHandler(object sender, TimbrarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimbrarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimbrarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591