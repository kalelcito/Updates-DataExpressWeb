//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DataExpressWeb.FacturaGlobalWeb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FacturaGlobalWebSoap", Namespace="http://tempuri.org/")]
    public partial class FacturaGlobalWeb : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FacuraGlobalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerarReporteOperationCompleted;
        
        private System.Threading.SendOrPostCallback TicketsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FacturaGlobalWeb() {
            this.Url = global::DataExpressWeb.Properties.Settings.Default.DataExpressWeb_FacturaGlobalWeb_FacturaGlobalWeb;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FacuraGlobalCompletedEventHandler FacuraGlobalCompleted;
        
        /// <remarks/>
        public event GenerarReporteCompletedEventHandler GenerarReporteCompleted;
        
        /// <remarks/>
        public event TicketsCompletedEventHandler TicketsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FacuraGlobal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FacuraGlobal(string rfcEmi, string idgiro, string jsonDocument, string iduser, string ambiente, string dateReceptor, string dateComprobante) {
            this.Invoke("FacuraGlobal", new object[] {
                        rfcEmi,
                        idgiro,
                        jsonDocument,
                        iduser,
                        ambiente,
                        dateReceptor,
                        dateComprobante});
        }
        
        /// <remarks/>
        public void FacuraGlobalAsync(string rfcEmi, string idgiro, string jsonDocument, string iduser, string ambiente, string dateReceptor, string dateComprobante) {
            this.FacuraGlobalAsync(rfcEmi, idgiro, jsonDocument, iduser, ambiente, dateReceptor, dateComprobante, null);
        }
        
        /// <remarks/>
        public void FacuraGlobalAsync(string rfcEmi, string idgiro, string jsonDocument, string iduser, string ambiente, string dateReceptor, string dateComprobante, object userState) {
            if ((this.FacuraGlobalOperationCompleted == null)) {
                this.FacuraGlobalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFacuraGlobalOperationCompleted);
            }
            this.InvokeAsync("FacuraGlobal", new object[] {
                        rfcEmi,
                        idgiro,
                        jsonDocument,
                        iduser,
                        ambiente,
                        dateReceptor,
                        dateComprobante}, this.FacuraGlobalOperationCompleted, userState);
        }
        
        private void OnFacuraGlobalOperationCompleted(object arg) {
            if ((this.FacuraGlobalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FacuraGlobalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerarReporte", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerarReporte(string año, string mes, string sucursal, string rfcEm, string cfdi, string directorio) {
            this.Invoke("GenerarReporte", new object[] {
                        año,
                        mes,
                        sucursal,
                        rfcEm,
                        cfdi,
                        directorio});
        }
        
        /// <remarks/>
        public void GenerarReporteAsync(string año, string mes, string sucursal, string rfcEm, string cfdi, string directorio) {
            this.GenerarReporteAsync(año, mes, sucursal, rfcEm, cfdi, directorio, null);
        }
        
        /// <remarks/>
        public void GenerarReporteAsync(string año, string mes, string sucursal, string rfcEm, string cfdi, string directorio, object userState) {
            if ((this.GenerarReporteOperationCompleted == null)) {
                this.GenerarReporteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarReporteOperationCompleted);
            }
            this.InvokeAsync("GenerarReporte", new object[] {
                        año,
                        mes,
                        sucursal,
                        rfcEm,
                        cfdi,
                        directorio}, this.GenerarReporteOperationCompleted, userState);
        }
        
        private void OnGenerarReporteOperationCompleted(object arg) {
            if ((this.GenerarReporteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarReporteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Tickets", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Tickets(string sqlWhere, string CfdiVersion, string mes, string anio, string serie, string rfcEmisor, string _rutaDoc, string _DirBase, string rfcBase) {
            this.Invoke("Tickets", new object[] {
                        sqlWhere,
                        CfdiVersion,
                        mes,
                        anio,
                        serie,
                        rfcEmisor,
                        _rutaDoc,
                        _DirBase,
                        rfcBase});
        }
        
        /// <remarks/>
        public void TicketsAsync(string sqlWhere, string CfdiVersion, string mes, string anio, string serie, string rfcEmisor, string _rutaDoc, string _DirBase, string rfcBase) {
            this.TicketsAsync(sqlWhere, CfdiVersion, mes, anio, serie, rfcEmisor, _rutaDoc, _DirBase, rfcBase, null);
        }
        
        /// <remarks/>
        public void TicketsAsync(string sqlWhere, string CfdiVersion, string mes, string anio, string serie, string rfcEmisor, string _rutaDoc, string _DirBase, string rfcBase, object userState) {
            if ((this.TicketsOperationCompleted == null)) {
                this.TicketsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTicketsOperationCompleted);
            }
            this.InvokeAsync("Tickets", new object[] {
                        sqlWhere,
                        CfdiVersion,
                        mes,
                        anio,
                        serie,
                        rfcEmisor,
                        _rutaDoc,
                        _DirBase,
                        rfcBase}, this.TicketsOperationCompleted, userState);
        }
        
        private void OnTicketsOperationCompleted(object arg) {
            if ((this.TicketsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TicketsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void FacuraGlobalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GenerarReporteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void TicketsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591